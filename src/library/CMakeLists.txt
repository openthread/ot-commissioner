#
#  Copyright (c) 2019, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

add_library(commissioner)

target_sources(commissioner
    PRIVATE
        cbor.cpp
        cbor.hpp
        coap.cpp
        coap.hpp
        coap_secure.hpp
        commissioner_impl.cpp
        commissioner_impl.hpp
        commissioner_safe.cpp
        commissioner_safe.hpp
        commissioning_session.cpp
        commissioning_session.hpp
        cose.cpp
        cose.hpp
        cwt.hpp
        dtls.cpp
        dtls.hpp
        endpoint.hpp
        error.cpp
        event.hpp
        logging.cpp
        logging.hpp
        multicast_dns.cpp
        multicast_dns.hpp
        network_data.cpp
        openthread/bloom_filter.cpp
        openthread/bloom_filter.hpp
        openthread/crc16.cpp
        openthread/crc16.hpp
        openthread/pbkdf2_cmac.cpp
        openthread/pbkdf2_cmac.hpp
        openthread/random.cpp
        openthread/random.hpp
        openthread/sha256.cpp
        openthread/sha256.hpp
        socket.cpp
        socket.hpp
        time.hpp
        timer.hpp
        tlv.cpp
        tlv.hpp
        token_manager.cpp
        token_manager.hpp
        udp_proxy.cpp
        udp_proxy.hpp
        uri.hpp
)

target_link_libraries(commissioner
    PRIVATE
        cn-cbor::cn-cbor
        cose
        mdns
        mbedtls
        mbedx509
        mbedcrypto
        fmt::fmt
        event_core
        event_pthreads
        commissioner-common
)

target_include_directories(commissioner
    PUBLIC
        $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
        $<INSTALL_INTERFACE:include>
)

install(TARGETS commissioner
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib
)

## Install third-party shared libraries. We need to install
## those shared libraries to enable commissioner-cli.
##
## We here install the built .so files directly
## because those third-party libraries are included
## as EXCLUDE_FROM_ALL, which means `install()` is
## disabled for them (intended).
if (BUILD_SHARED_LIBS)
    install(FILES
                $<TARGET_FILE:cn-cbor::cn-cbor>
                $<TARGET_FILE:cose>
                $<TARGET_FILE:mdns>
                $<TARGET_FILE:mbedtls>
                $<TARGET_FILE:mbedx509>
                $<TARGET_FILE:mbedcrypto>
                $<TARGET_FILE:fmt::fmt>
                $<TARGET_FILE:event_core_shared>
                $<TARGET_FILE:event_pthreads_shared>
            DESTINATION lib
    )

    ## Update ldconfig links and caches.
    install(CODE "execute_process(COMMAND sudo ldconfig)")
endif()

install(DIRECTORY ${PROJECT_SOURCE_DIR}/include/commissioner
        DESTINATION include
)
