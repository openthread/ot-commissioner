#
#  Copyright (c) 2020, The OpenThread Commissioner Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

name: Build

on: [push, pull_request]

jobs:

  cancel-previous-runs:
    runs-on: ubuntu-18.04
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        if: "github.ref != 'refs/heads/master'"

  pretty:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Bootstrap
        run: |
          sudo apt update
          sudo apt remove -y clang-6.0 libclang-common-6.0-dev libclang1-6.0 libllvm6.0
          sudo apt autoremove
          sudo apt --no-install-recommends install -y clang-tools clang-format-6.0
          clang-format-6.0 --version
          python3 -m pip install yapf==0.29.0
      - name: Check
        run: |
          script/make-pretty check

  gcc-build:
    name: gcc-${{ matrix.gcc_ver }}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        gcc_ver: [5, 6, 7, 8, 9]
    steps:
      - uses: actions/checkout@v2
      - name: Install CMake 3.10.1
        run: |
          wget https://cmake.org/files/v3.10/cmake-3.10.1.zip
          unzip cmake-3.10.1
          cd cmake-3.10.1
          cmake .
          make -j4
          sudo make install
          cmake --version
      - name: Bootstrap
        run: |
          script/bootstrap.sh
      - name: Build
        run: |
          gcc --version
          mkdir build && cd build
          cmake -GNinja                           \
                -DBUILD_SHARED_LIBS=ON            \
                -DCMAKE_CXX_STANDARD=11           \
                -DCMAKE_CXX_STANDARD_REQUIRED=ON  \
                -DCMAKE_BUILD_TYPE=Release        \
                -DCMAKE_INSTALL_PREFIX=/usr/local \
                ..
          ninja
          sudo ninja install
          commissioner-cli -v
          ./tests/commissioner-test

  clang-build:
    name: clang-${{ matrix.clang_ver }}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        clang_ver: [5, 6, 7, 8, 9]
    steps:
      - uses: actions/checkout@v2
      - name: Bootstrap
        run: |
          script/bootstrap.sh
      - name: Build
        run: |
          clang --version
          mkdir build && cd build
          cmake -GNinja                           \
                -DBUILD_SHARED_LIBS=ON            \
                -DCMAKE_CXX_STANDARD=11           \
                -DCMAKE_CXX_STANDARD_REQUIRED=ON  \
                -DCMAKE_BUILD_TYPE=Release        \
                -DCMAKE_INSTALL_PREFIX=/usr/local \
                ..
          ninja
          sudo ninja install
          commissioner-cli -v
          ./tests/commissioner-test

  macos:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - name: Bootstrap
        run: |
          script/bootstrap.sh
      - name: Build
        run: |
          mkdir build && cd build
          cmake -G"Unix Makefiles"                \
                -DCMAKE_CXX_STANDARD=11           \
                -DCMAKE_CXX_STANDARD_REQUIRED=ON  \
                -DCMAKE_BUILD_TYPE=Release        \
                -DCMAKE_INSTALL_PREFIX=/usr/local \
                ..
          make -j2
          sudo make install
          commissioner-cli -v
          ./tests/commissioner-test

  android-ndk:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Bootstrap
        run: |
          script/bootstrap.sh
      - name: Build
        run: |
          mkdir build && cd build
          cmake -GNinja                                                                             \
                -DCMAKE_TOOLCHAIN_FILE=$ANDROID_HOME/ndk-bundle/build/cmake/android.toolchain.cmake \
                -DANDROID_ABI="armeabi-v7a"                                                         \
                -DANDROID_ARM_NEON=ON                                                               \
                -DANDROID_NATIVE_API_LEVEL=21                                                       \
                -DBUILD_SHARED_LIBS=ON                                                              \
                -DCMAKE_CXX_STANDARD=11                                                             \
                -DCMAKE_CXX_STANDARD_REQUIRED=ON                                                    \
                -DCMAKE_BUILD_TYPE=Release                                                          \
                -DOT_COMM_ANDROID=ON                                                                \
                -DOT_COMM_APP=OFF                                                                   \
                -DOT_COMM_TEST=OFF                                                                  \
                ..
          ninja

  java-binding:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
      - name: Bootstrap
        run: |
          script/bootstrap.sh
          brew install swig@4
      - name: Build
        run: |
          mkdir build && cd build
          cmake -GNinja                          \
                -DBUILD_SHARED_LIBS=ON           \
                -DCMAKE_CXX_STANDARD=11          \
                -DCMAKE_CXX_STANDARD_REQUIRED=ON \
                -DCMAKE_BUILD_TYPE=Release       \
                -DOT_COMM_JAVA_BINDING=ON        \
                ..
          ninja

  fmt-format-check:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Bootstrap
        run: |
          script/bootstrap.sh
      - name: Build
        run: |
          mkdir build && cd build
          cmake -GNinja                           \
                -DBUILD_SHARED_LIBS=ON            \
                -DCMAKE_CXX_STANDARD=14           \
                -DCMAKE_CXX_STANDARD_REQUIRED=ON  \
                -DCMAKE_BUILD_TYPE=Release        \
                -DCMAKE_INSTALL_PREFIX=/usr/local \
                ..
          ninja
